`/sbin/runlevel` shows the previous runlevel you were in and the one you are in now.
`/sbin/init 1` stops all the services of the runlevel you are in now and runs the services of the runlevel 1 (single-user text mode).
`killall firefox` kills all instances of the program firefox.
`killall -9 firefox` forcefully kills all instances of the program firefox.
`ln -s /sbin/init /sbin/telinit` creates a softlink of the program init as telinit (this link should already exist).
`shutdown -h +5` to stop the computer in 5 minutes. `shutdown -c` to cancel the shutdown.
`halt` stops the coputer. `reboot` restarts the computer.
To show a summary of all devices connected to the PCI bus, use `lspci`. To show more information `lspci -vv`.
Run `lsusb` to display information about USB buses in the system and the devices connected to them.
`dmesg` prints a record of everything detected by the kernel.
To show 50 lines of the output of a program (here it's dmesg) starting from line 123 type `dmesg | tail -n +123 | head -n 50`.
To view CPU information read /proc/cpuinfo (`less /proc/cpuinfo`).
To view physical memory and swap information read /proc/meminfo (`less /proc/meminfo`).
To display all partitions on all hard drives use `fdisk -l`.
Use the `id` command to view your user ID, group ID and the rest of the groups you belong to.
`id -u` shows your UID.
`id -un` is the same as `whoami`. They both print the user name.
You can press Ctrl-D to exit a terminal in place of `exit` since Ctrl-D sends the EOT character (end of transmission). It also works in other situations in which a program reads commands from the standard input (like `python`).
To view a file as a series of bytes represented as hex numbers pass it to `od -t x1` (type = 1 byte hex). Example: `od -tx1 </etc/passwd`.
To find out the location of a command use `which command`.
You can find the location of the binary, source, and manual of a command by using `whereis command`.
`pwd` prints the path of the directory you are in.
`cd` (without an argument) takes you to your home directory. `cd -` takes you to the previous directory you were in.
`cat <file1 >file2` is equivalent to `cp file1 file2`.
Using `fc` you can edit commands in the history in your favorite editor.
If you made a typing mistake in your last command you can replace and execute by using `^old^new`. For example if you issued the command `less /pro/meminfo` you can execute it correctly by typing `^pro^proc`.
`gpasswd -a paul audio` adds the user paul to group audio.
`uname -a` to view what kernel you're using and other information.
To mount an ISO image as read-only use `mount -o loop theisofile.iso /mnt/location`.
If you want to recursvily find all the files that contain the case insensitive text "something" in the current directory use `grep -lir "some text" *`
To view the log on history run `last`.
`lsof` to list all files belonging to all active processess.
If you're unsure how a command works read the manual by typing `man` followed by the command's name.
If you want to search for a certain string while reading the manual type `/` followed by the term. If you want to know what the option "o" does type `/-o` and press "n" to go through the results, and "N" to go backwords. The man program works similar to vi.
To create an ISO file with the contents of directory "dir1" type `mkisofs -o isofile.iso dir1`.
`zip -0r archive.zip directory` stores (no compression) all the contents of `directory` by recursivelly scanning it (`r` option).
